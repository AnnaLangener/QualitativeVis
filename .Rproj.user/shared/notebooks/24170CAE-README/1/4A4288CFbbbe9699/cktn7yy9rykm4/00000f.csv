"0","# Fix the value for multiple levels"
"0","checkcol <- Source_Target$source[Source_Target$value != 1]"
"0",""
"0","# i = 1"
"0","# j = 2"
"0","# add another check for other sublevel"
"0",""
"0","for (i in 1:length(checkcol)) {"
"0","  targets <- Source_Target$target[Source_Target$source == checkcol[i]]"
"0","  for (j in 1:length(targets)) {"
"0","    tragets_lowerlevel <-"
"0","      Source_Target$target[Source_Target$source %in% targets[j]]"
"0","    for (k in 1:length(tragets_lowerlevel)) {"
"0","      value <-"
"0","        nrow(Source_Target[Source_Target$source %in% tragets_lowerlevel[k], ]) + 1"
"0","      if (value > 1) {"
"0","        Source_Target$value[Source_Target$source == checkcol[i] &"
"0","                              Source_Target$target == targets[j]] <- value"
"0","      }"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","# Correct transport case (two sources go to one target)"
"0","target_counts <- Source_Target %>%"
"0","  group_by(target) %>%"
"0","  summarize(value = n())"
"0",""
"0","index <- left_join(Source_Target, target_counts, by = c(""target"" = ""target""))"
"0","index <- index[index$value.y != 1,]"
"0","index <- index[index$value.x != 1,]"
"0",""
"0","index_source <- index$source"
"0","index_source <- Source_Target[Source_Target$target %in% index_source,]"
"0",""
"0","index <- index[duplicated(index$target),]"
"0",""
"0","for(i in 1:nrow(index)){"
"0","Source_Target$value[ Source_Target$target == index$target[i]] ="
"0","  Source_Target$value[ Source_Target$target == index$target[i]]/index$value.y[i]"
"0","}"
"0",""
"0","# fix other mistake"
"0","for(i in 1:nrow(index_source)){"
"0","Source_Target$value[Source_Target$target %in% index_source] = Source_Target$value[index_source$target[i] == Source_Target$source]"
"0","}"
